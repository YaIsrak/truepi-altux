/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
	_type: 'sanity.imagePaletteSwatch';
	background?: string;
	foreground?: string;
	population?: number;
	title?: string;
};

export type SanityImagePalette = {
	_type: 'sanity.imagePalette';
	darkMuted?: SanityImagePaletteSwatch;
	lightVibrant?: SanityImagePaletteSwatch;
	darkVibrant?: SanityImagePaletteSwatch;
	vibrant?: SanityImagePaletteSwatch;
	dominant?: SanityImagePaletteSwatch;
	lightMuted?: SanityImagePaletteSwatch;
	muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
	_type: 'sanity.imageDimensions';
	height?: number;
	width?: number;
	aspectRatio?: number;
};

export type Geopoint = {
	_type: 'geopoint';
	lat?: number;
	lng?: number;
	alt?: number;
};

export type Sale = {
	_id: string;
	_type: 'sale';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	customerEmail?: string;
	amount?: number;
	quantity?: number;
	approved?: boolean;
	product?: {
		_ref: string;
		_type: 'reference';
		_weak?: boolean;
		[internalGroqTypeReferenceTo]?: 'product';
	};
	stripeId?: string;
	createdAt?: string;
};

export type Review = {
	_id: string;
	_type: 'review';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	author?: string;
	designation?: string;
	image?: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
		};
		media?: unknown;
		hotspot?: SanityImageHotspot;
		crop?: SanityImageCrop;
		_type: 'image';
	};
	rating?: number;
	description?: string;
};

export type Product = {
	_id: string;
	_type: 'product';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	title?: string;
	image?: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
		};
		media?: unknown;
		hotspot?: SanityImageHotspot;
		crop?: SanityImageCrop;
		_type: 'image';
	};
	given_price?: number;
	price?: number;
	stock?: number;
	color?: Color;
	description?: string;
	file?: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.fileAsset';
		};
		media?: unknown;
		_type: 'file';
	};
};

export type SanityFileAsset = {
	_id: string;
	_type: 'sanity.fileAsset';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	originalFilename?: string;
	label?: string;
	title?: string;
	description?: string;
	altText?: string;
	sha1hash?: string;
	extension?: string;
	mimeType?: string;
	size?: number;
	assetId?: string;
	uploadId?: string;
	path?: string;
	url?: string;
	source?: SanityAssetSourceData;
};

export type Blog = {
	_id: string;
	_type: 'blog';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	title?: string;
	slug?: Slug;
	author?: {
		_ref: string;
		_type: 'reference';
		_weak?: boolean;
		[internalGroqTypeReferenceTo]?: 'author';
	};
	image?: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
		};
		media?: unknown;
		hotspot?: SanityImageHotspot;
		crop?: SanityImageCrop;
		alt?: string;
		_type: 'image';
	};
	categories?: Array<{
		_ref: string;
		_type: 'reference';
		_weak?: boolean;
		_key: string;
		[internalGroqTypeReferenceTo]?: 'category';
	}>;
	publishedAt?: string;
	body?: Array<
		| {
				children?: Array<{
					marks?: Array<string>;
					text?: string;
					_type: 'span';
					_key: string;
				}>;
				style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'blockquote';
				listItem?: 'bullet';
				markDefs?: Array<{
					href?: string;
					_type: 'link';
					_key: string;
				}>;
				level?: number;
				_type: 'block';
				_key: string;
		  }
		| {
				asset?: {
					_ref: string;
					_type: 'reference';
					_weak?: boolean;
					[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
				};
				media?: unknown;
				hotspot?: SanityImageHotspot;
				crop?: SanityImageCrop;
				alt?: string;
				_type: 'image';
				_key: string;
		  }
	>;
};

export type Author = {
	_id: string;
	_type: 'author';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	name?: string;
	slug?: Slug;
	image?: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
		};
		media?: unknown;
		hotspot?: SanityImageHotspot;
		crop?: SanityImageCrop;
		_type: 'image';
	};
	bio?: Array<{
		children?: Array<{
			marks?: Array<string>;
			text?: string;
			_type: 'span';
			_key: string;
		}>;
		style?: 'normal';
		listItem?: never;
		markDefs?: Array<{
			href?: string;
			_type: 'link';
			_key: string;
		}>;
		level?: number;
		_type: 'block';
		_key: string;
	}>;
};

export type Category = {
	_id: string;
	_type: 'category';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	title?: string;
	slug?: Slug;
	description?: string;
};

export type Slug = {
	_type: 'slug';
	current?: string;
	source?: string;
};

export type BlockContent = Array<
	| {
			children?: Array<{
				marks?: Array<string>;
				text?: string;
				_type: 'span';
				_key: string;
			}>;
			style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'blockquote';
			listItem?: 'bullet';
			markDefs?: Array<{
				href?: string;
				_type: 'link';
				_key: string;
			}>;
			level?: number;
			_type: 'block';
			_key: string;
	  }
	| {
			asset?: {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
			};
			media?: unknown;
			hotspot?: SanityImageHotspot;
			crop?: SanityImageCrop;
			alt?: string;
			_type: 'image';
			_key: string;
	  }
>;

export type SanityImageCrop = {
	_type: 'sanity.imageCrop';
	top?: number;
	bottom?: number;
	left?: number;
	right?: number;
};

export type SanityImageHotspot = {
	_type: 'sanity.imageHotspot';
	x?: number;
	y?: number;
	height?: number;
	width?: number;
};

export type SanityImageAsset = {
	_id: string;
	_type: 'sanity.imageAsset';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	originalFilename?: string;
	label?: string;
	title?: string;
	description?: string;
	altText?: string;
	sha1hash?: string;
	extension?: string;
	mimeType?: string;
	size?: number;
	assetId?: string;
	uploadId?: string;
	path?: string;
	url?: string;
	metadata?: SanityImageMetadata;
	source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
	_type: 'sanity.assetSourceData';
	name?: string;
	id?: string;
	url?: string;
};

export type SanityImageMetadata = {
	_type: 'sanity.imageMetadata';
	location?: Geopoint;
	dimensions?: SanityImageDimensions;
	palette?: SanityImagePalette;
	lqip?: string;
	blurHash?: string;
	hasAlpha?: boolean;
	isOpaque?: boolean;
};

export type Color = {
	_type: 'color';
	hex?: string;
	alpha?: number;
	hsl?: HslaColor;
	hsv?: HsvaColor;
	rgb?: RgbaColor;
};

export type RgbaColor = {
	_type: 'rgbaColor';
	r?: number;
	g?: number;
	b?: number;
	a?: number;
};

export type HsvaColor = {
	_type: 'hsvaColor';
	h?: number;
	s?: number;
	v?: number;
	a?: number;
};

export type HslaColor = {
	_type: 'hslaColor';
	h?: number;
	s?: number;
	l?: number;
	a?: number;
};

export type AllSanitySchemaTypes =
	| SanityImagePaletteSwatch
	| SanityImagePalette
	| SanityImageDimensions
	| Geopoint
	| Sale
	| Review
	| Product
	| SanityFileAsset
	| Blog
	| Author
	| Category
	| Slug
	| BlockContent
	| SanityImageCrop
	| SanityImageHotspot
	| SanityImageAsset
	| SanityAssetSourceData
	| SanityImageMetadata
	| Color
	| RgbaColor
	| HsvaColor
	| HslaColor;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./sanity/lib/query.ts
// Variable: PRODUCTS_QUERY
// Query: *[_type == "product"] | order(_createdAt asc)
export type PRODUCTS_QUERYResult = Array<{
	_id: string;
	_type: 'product';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	title?: string;
	image?: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
		};
		media?: unknown;
		hotspot?: SanityImageHotspot;
		crop?: SanityImageCrop;
		_type: 'image';
	};
	given_price?: number;
	price?: number;
	stock?: number;
	color?: Color;
	description?: string;
	file?: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.fileAsset';
		};
		media?: unknown;
		_type: 'file';
	};
}>;
// Variable: BLOGS_QUERY
// Query: *[_type == "blog"] | order(_createdAt desc)
export type BLOGS_QUERYResult = Array<{
	_id: string;
	_type: 'blog';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	title?: string;
	slug?: Slug;
	author?: {
		_ref: string;
		_type: 'reference';
		_weak?: boolean;
		[internalGroqTypeReferenceTo]?: 'author';
	};
	image?: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
		};
		media?: unknown;
		hotspot?: SanityImageHotspot;
		crop?: SanityImageCrop;
		alt?: string;
		_type: 'image';
	};
	categories?: Array<{
		_ref: string;
		_type: 'reference';
		_weak?: boolean;
		_key: string;
		[internalGroqTypeReferenceTo]?: 'category';
	}>;
	publishedAt?: string;
	body?: Array<
		| {
				children?: Array<{
					marks?: Array<string>;
					text?: string;
					_type: 'span';
					_key: string;
				}>;
				style?: 'blockquote' | 'h1' | 'h2' | 'h3' | 'h4' | 'normal';
				listItem?: 'bullet';
				markDefs?: Array<{
					href?: string;
					_type: 'link';
					_key: string;
				}>;
				level?: number;
				_type: 'block';
				_key: string;
		  }
		| {
				asset?: {
					_ref: string;
					_type: 'reference';
					_weak?: boolean;
					[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
				};
				media?: unknown;
				hotspot?: SanityImageHotspot;
				crop?: SanityImageCrop;
				alt?: string;
				_type: 'image';
				_key: string;
		  }
	>;
}>;
// Variable: REVIEWS_QUERY
// Query: *[_type == "review"] | order(_createdAt desc)
export type REVIEWS_QUERYResult = Array<{
	_id: string;
	_type: 'review';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	author?: string;
	designation?: string;
	image?: {
		asset?: {
			_ref: string;
			_type: 'reference';
			_weak?: boolean;
			[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
		};
		media?: unknown;
		hotspot?: SanityImageHotspot;
		crop?: SanityImageCrop;
		_type: 'image';
	};
	rating?: number;
	description?: string;
}>;
// Variable: SALE_QUERY
// Query: *[_type == "sale" && stripeId == $stripeId][0]{		...,		product->	}
export type SALE_QUERYResult = {
	_id: string;
	_type: 'sale';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	customerEmail?: string;
	amount?: number;
	quantity?: number;
	approved?: boolean;
	product: {
		_id: string;
		_type: 'product';
		_createdAt: string;
		_updatedAt: string;
		_rev: string;
		title?: string;
		image?: {
			asset?: {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
			};
			media?: unknown;
			hotspot?: SanityImageHotspot;
			crop?: SanityImageCrop;
			_type: 'image';
		};
		given_price?: number;
		price?: number;
		stock?: number;
		color?: Color;
		description?: string;
		file?: {
			asset?: {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'sanity.fileAsset';
			};
			media?: unknown;
			_type: 'file';
		};
	} | null;
	stripeId?: string;
	createdAt?: string;
} | null;
// Variable: USER_SALES_QUERY
// Query: *[_type == "sale" && customerEmail == $customerEmail] | order(_createdAt desc){	...,		product->{..., "downloadLink": file.asset->url},	}
export type USER_SALES_QUERYResult = Array<{
	_id: string;
	_type: 'sale';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	customerEmail?: string;
	amount?: number;
	quantity?: number;
	approved?: boolean;
	product: {
		_id: string;
		_type: 'product';
		_createdAt: string;
		_updatedAt: string;
		_rev: string;
		title?: string;
		image?: {
			asset?: {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
			};
			media?: unknown;
			hotspot?: SanityImageHotspot;
			crop?: SanityImageCrop;
			_type: 'image';
		};
		given_price?: number;
		price?: number;
		stock?: number;
		color?: Color;
		description?: string;
		file?: {
			asset?: {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'sanity.fileAsset';
			};
			media?: unknown;
			_type: 'file';
		};
		downloadLink: string | null;
	} | null;
	stripeId?: string;
	createdAt?: string;
}>;
// Variable: SALES_QUERY
// Query: *[_type == "sale"]{		...,		product->	}
export type SALES_QUERYResult = Array<{
	email: ReactI18NextChildren | Iterable<ReactI18NextChildren>;
	_id: string;
	_type: 'sale';
	_createdAt: string;
	_updatedAt: string;
	_rev: string;
	customerEmail?: string;
	amount?: number;
	quantity?: number;
	approved?: boolean;
	product: {
		_id: string;
		_type: 'product';
		_createdAt: string;
		_updatedAt: string;
		_rev: string;
		title?: string;
		image?: {
			asset?: {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
			};
			media?: unknown;
			hotspot?: SanityImageHotspot;
			crop?: SanityImageCrop;
			_type: 'image';
		};
		given_price?: number;
		price?: number;
		stock?: number;
		color?: Color;
		description?: string;
		file?: {
			asset?: {
				_ref: string;
				_type: 'reference';
				_weak?: boolean;
				[internalGroqTypeReferenceTo]?: 'sanity.fileAsset';
			};
			media?: unknown;
			_type: 'file';
		};
	} | null;
	stripeId?: string;
	createdAt?: string;
}>;

// Query TypeMap
import '@sanity/client';
declare module '@sanity/client' {
	interface SanityQueries {
		'*[_type == "product"] | order(_createdAt asc)': PRODUCTS_QUERYResult;
		'*[_type == "blog"] | order(_createdAt desc)': BLOGS_QUERYResult;
		'*[_type == "review"] | order(_createdAt desc)': REVIEWS_QUERYResult;
		'*[_type == "sale" && stripeId == $stripeId][0]{\n\t\t...,\n\t\tproduct->\n\t}': SALE_QUERYResult;
		'*[_type == "sale" && customerEmail == $customerEmail] | order(_createdAt desc){\n\t...,\n\t\tproduct->{..., "downloadLink": file.asset->url},\n\t}': USER_SALES_QUERYResult;
		'*[_type == "sale"]{\n\t\t...,\n\t\tproduct->\n\t}': SALES_QUERYResult;
	}
}
